// This file is part of the materials accompanying the book
// "The Elements of Computing Systems" by Nisan and Schocken,
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(sel=address[6..8],in=load,a=loada,b=loadb,c=loadc,d=loadd,e=loade,f=loadf,g=loadg,h=loadh);
    RAM64(in=in,address=address[0..5],load=loada,out=a);
    RAM64(in=in,address=address[0..5],load=loadb,out=b);
    RAM64(in=in,address=address[0..5],load=loadc,out=c);
    RAM64(in=in,address=address[0..5],load=loadd,out=d);
    RAM64(in=in,address=address[0..5],load=loade,out=e);
    RAM64(in=in,address=address[0..5],load=loadf,out=f);
    RAM64(in=in,address=address[0..5],load=loadg,out=g);
    RAM64(in=in,address=address[0..5],load=loadh,out=h);
    Mux8Way16(sel=address[6..8],a=a,b=b,c=c,d=d,e=e,f=f,g=g,h=h,out=out);
}
